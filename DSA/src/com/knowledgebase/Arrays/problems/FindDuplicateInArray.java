package com.knowledgebase.Arrays.problems;

import java.util.*;

/**
 * Created by rahul.pandey on 4/1/17.
 */
public class FindDuplicateInArray {

    private static int repeatedNumber(final List<Integer> a) {
        if (a.size() == 0) return -1;
        int sqrt = (int) Math.round(Math.sqrt(a.size()));
        int[] hashTable = new int[sqrt];
        for (int i = 0; i < a.size(); i++) {
            int num = a.get(i);
            int range = (num / sqrt);
            range = ((num >= sqrt && num % sqrt == 0) || range == sqrt) ? range - 1 : range;
            hashTable[range] += 1;
        }
        List<Integer> list = new ArrayList<>();
        int maxElRange = -1, maxEl = -1;
        for (int i = 0; i < sqrt; i++) {
            maxEl = Math.max(maxEl, hashTable[i]);
            if(hashTable[i] > sqrt) {
                maxElRange = i;
                break;
            } else if(hashTable[i] < sqrt && maxEl == sqrt) {
                maxElRange = i;
            }
        }
        for (int i = 0; i < a.size(); i++) {
            int num = a.get(i);
            int range = num / sqrt;
            range = ((num >= sqrt && num % sqrt == 0) || range == sqrt) ? range - 1 : range;
            if (range == maxElRange) {
                if (list.contains(num)) {
                    return num;
                } else {
                    list.add(num);
                }
            }
        }
        return -1;
    }

    public static void main(String[] args) {
        Integer[] a = {127, 228, 308, 341, 350, 371, 195, 11, 223, 138, 206, 279, 385, 289, 276, 152, 42, 208, 382, 22, 185, 339, 64, 149, 337, 122, 101, 15, 388, 205, 160, 35, 277, 240, 201, 302, 335, 336, 61, 236, 320, 200, 85, 44, 287, 164, 50, 366, 202, 301, 259, 89, 59, 113, 47, 248, 146, 71, 23, 373, 197, 39, 27, 381, 219, 253, 32, 386, 129, 105, 299, 296, 31, 110, 151, 191, 372, 395, 255, 257, 275, 77, 380, 226, 90, 251, 67, 281, 234, 9, 30, 216, 370, 1, 88, 107, 10, 368, 80, 119, 34, 325, 82, 328, 54, 319, 233, 66, 229, 209, 135, 98, 192, 331, 21, 125, 241, 297, 221, 194, 19, 369, 92, 290, 87, 384, 141, 41, 84, 224, 391, 324, 55, 145, 378, 214, 161, 347, 130, 48, 177, 365, 163, 17, 133, 210, 182, 361, 340, 49, 227, 131, 36, 353, 311, 225, 134, 243, 109, 115, 176, 284, 315, 26, 330, 262, 156, 304, 309, 323, 99, 108, 167, 343, 144, 148, 392, 118, 81, 37, 387, 374, 360, 332, 150, 171, 231, 18, 249, 126, 252, 327, 95, 172, 215, 184, 295, 103, 220, 293, 384, 16, 292, 354, 211, 396, 198, 5, 298, 286, 316, 2, 307, 389, 348, 269, 73, 159, 352, 212, 213, 139, 271, 52, 264, 28, 65, 8, 45, 40, 283, 3, 102, 246, 94, 181, 186, 305, 43, 303, 322, 199, 14, 143, 168, 280, 242, 128, 106, 291, 38, 137, 349, 51, 12, 123, 180, 154, 321, 165, 124, 356, 278, 183, 375, 100, 222, 114, 117, 136, 6, 326, 254, 68, 329, 270, 58, 69, 265, 394, 363, 310, 140, 204, 342, 364, 377, 258, 60, 261, 78, 312, 317, 196, 170, 20, 190, 33, 70, 238, 142, 333, 178, 346, 112, 96, 232, 235, 357, 285, 155, 169, 93, 79, 217, 174, 239, 207, 318, 193, 120, 104, 245, 189, 62, 268, 121, 294, 390, 218, 24, 306, 273, 367, 111, 76, 376, 344, 359, 355, 74, 116, 358, 237, 53, 166, 256, 338, 274, 300, 230, 175, 91, 46, 362, 147, 351, 72, 75, 97, 7, 345, 266, 263, 393, 25, 282, 244, 250, 83, 379, 57, 63, 314, 272, 86, 288, 157, 334, 132, 179, 383, 173, 260, 56, 267, 4, 188, 158, 313, 247, 187, 203, 13, 153, 29, 162};
        System.out.println(repeatedNumber(new ArrayList<>(Arrays.asList(a))));

    }
}
